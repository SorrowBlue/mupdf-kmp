name: Publish Maven Central

on:
  push:
    branches:
      - main
  release:
    types: [ published ]

permissions:
  contents: read
  pull-requests: write
  security-events: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event_name }}
  cancel-in-progress: true

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Setup JDK and Gradle
        uses: ./.github/actions/setup-java-gradle
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v2
      - name: Run buildJavaviewerlib
        run: ./gradlew :lib:addUtf8BomToFiles :lib:desktopResourceWindowsX86 :lib:desktopResourceWindowsAMD64
      - name: Upload Windows library
        uses: actions/upload-artifact@v4
        with:
          name: windows
          path: lib/src/jvmMain/resources/
          compression-level: 0

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libfreetype-dev
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Setup JDK and Gradle
        uses: ./.github/actions/setup-java-gradle
      - name: Run buildJavaviewerlib
        run: ./gradlew :lib:desktopResourceLinuxAMD64
      - name: Upload Linux library
        uses: actions/upload-artifact@v4
        with:
          name: linux
          path: lib/src/jvmMain/resources/
          compression-level: 0

  publish:
    if: github.event_name == 'release'
    needs:
      - build-windows
      - build-linux
    runs-on: ubuntu-latest
    environment: main
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          path: lib/src/jvmMain/resources/
          merge-multiple: true
      - name: Setup JDK and Gradle
        uses: ./.github/actions/setup-java-gradle

      - name: ðŸš€ Run publish
        run: ./gradlew :lib:publishAndReleaseToMavenCentral --no-configuration-cache
        env:
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.ORG_GRADLE_PROJECT_MAVENCENTRALPASSWORD }}
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.ORG_GRADLE_PROJECT_MAVENCENTRALUSERNAME }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.ORG_GRADLE_PROJECT_SIGNINGINMEMORYKEY }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyId: ${{ secrets.ORG_GRADLE_PROJECT_SIGNINGINMEMORYKEYID }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.ORG_GRADLE_PROJECT_SIGNINGINMEMORYKEYPASSWORD }}
          ORG_GRADLE_PROJECT_mavenCentralAutomaticPublishing: ${{ secrets.ORG_GRADLE_PROJECT_MAVENCENTRALAUTOMATICPUBLISHING }}
          ORG_GRADLE_PROJECT_signAllPublications: true

  publish-snapshot:
    if: github.event_name != 'release'
    needs:
      - build-windows
      - build-linux
    runs-on: ubuntu-latest
    environment: main
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          path: lib/src/jvmMain/resources/
          merge-multiple: true
      - name: Setup JDK and Gradle
        uses: ./.github/actions/setup-java-gradle
      - name: ðŸš€ Run publish snapshot
        run: ./gradlew :lib:publishAllPublicationsToMavenCentralRepository --no-configuration-cache
        env:
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.ORG_GRADLE_PROJECT_MAVENCENTRALPASSWORD }}
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.ORG_GRADLE_PROJECT_MAVENCENTRALUSERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralAutomaticPublishing: ${{ secrets.ORG_GRADLE_PROJECT_MAVENCENTRALAUTOMATICPUBLISHING }}
          ORG_GRADLE_PROJECT_signAllPublications: false

